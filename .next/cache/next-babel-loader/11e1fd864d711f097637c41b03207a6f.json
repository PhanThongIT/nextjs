{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/namlong/nextjs-app/pages/post/[id]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport config from \"../../../config\";\n\nconst linkComments = _.get(config, \"linkComments\");\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Post: \", id), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, _renderLinkComment()));\n};\n\nconst _renderLinkComment = id => {\n  if (!_.isEmpty(linkComments)) {\n    return _.map(linkComments, (item, index) => {\n      return __jsx(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: _.get(item, \"href\"),\n        as: `/post/${id}/${_.get(item, \"asLink\")}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, _.get(item, \"content\")));\n    });\n  } else {\n    return undefined;\n  }\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/ubuntu/Desktop/namlong/nextjs-app/pages/post/[id]/index.js"],"names":["useRouter","Link","config","linkComments","_","get","Post","router","id","query","_renderLinkComment","isEmpty","map","item","index","undefined"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,YAAY,GAAGC,CAAC,CAACC,GAAF,CAAMH,MAAN,EAAc,cAAd,CAArB;;AAEA,MAAMI,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWD,EAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,kBAAkB,EAAvB,CAFF,CADF;AAMD,CAVD;;AAYA,MAAMA,kBAAkB,GAAGF,EAAE,IAAI;AAC/B,MAAI,CAACJ,CAAC,CAACO,OAAF,CAAUR,YAAV,CAAL,EAA8B;AAC5B,WAAOC,CAAC,CAACQ,GAAF,CAAMT,YAAN,EAAoB,CAACU,IAAD,EAAOC,KAAP,KAAiB;AAC1C,aACE;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AACE,QAAA,IAAI,EAAEV,CAAC,CAACC,GAAF,CAAMQ,IAAN,EAAY,MAAZ,CADR;AAEE,QAAA,EAAE,EAAG,SAAQL,EAAG,IAAGJ,CAAC,CAACC,GAAF,CAAMQ,IAAN,EAAY,QAAZ,CAAsB,EAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGT,CAAC,CAACC,GAAF,CAAMQ,IAAN,EAAY,SAAZ,CAJH,CADF,CADF;AAUD,KAXM,CAAP;AAYD,GAbD,MAaO;AACL,WAAOE,SAAP;AACD;AACF,CAjBD;;AAmBA,eAAeT,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport config from \"../../../config\";\n\nconst linkComments = _.get(config, \"linkComments\");\n\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  return (\n    <>\n      <h1>Post: {id}</h1>\n      <ul>{_renderLinkComment()}</ul>\n    </>\n  );\n};\n\nconst _renderLinkComment = id => {\n  if (!_.isEmpty(linkComments)) {\n    return _.map(linkComments, (item, index) => {\n      return (\n        <li key={index}>\n          <Link\n            href={_.get(item, \"href\")}\n            as={`/post/${id}/${_.get(item, \"asLink\")}`}\n          >\n            {_.get(item, \"content\")}\n          </Link>\n        </li>\n      );\n    });\n  } else {\n    return undefined;\n  }\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}