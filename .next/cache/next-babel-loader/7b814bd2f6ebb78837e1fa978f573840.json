{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/namlong/nextjs-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport config from \"../config\";\nimport Link from \"next/link\";\n\nconst routers = _.get(config, \"routers\");\n\nfunction HomePage() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Welcome to Next.js!\", __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Menu\"), _renderRouters(routers));\n}\n\nconst _renderRouters = routers => {\n  const {\n    0: isShow,\n    1: setToggle\n  } = useState(false);\n\n  if (!_.isEmpty(routers)) {\n    return _.map(routers, (group, idxGroup) => {\n      return __jsx(\"div\", {\n        key: idxGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        onClick: () => setToggle(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, _.get(group, \"text\")), isShow && __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, !_.isEmpty(group.subRouters) && _.map(group.subRouters, (router, index) => {\n        return __jsx(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: _.get(router, \"href\"),\n          as: `${_.get(router, \"href\")}${_.get(router, \"id\")}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, _.get(router, \"text\")));\n      })));\n    });\n  }\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/home/ubuntu/Desktop/namlong/nextjs-app/pages/index.js"],"names":["React","useState","_","config","Link","routers","get","HomePage","_renderRouters","isShow","setToggle","isEmpty","map","group","idxGroup","subRouters","router","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,OAAO,GAAGH,CAAC,CAACI,GAAF,CAAMH,MAAN,EAAc,SAAd,CAAhB;;AAEA,SAASI,QAAT,GAAoB;AAClB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGC,cAAc,CAACH,OAAD,CAHjB,CADF;AAOD;;AAED,MAAMG,cAAc,GAAGH,OAAO,IAAI;AAChC,QAAM;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,KAAD,CAApC;;AAEA,MAAI,CAACC,CAAC,CAACS,OAAF,CAAUN,OAAV,CAAL,EAAyB;AACvB,WAAOH,CAAC,CAACU,GAAF,CAAMP,OAAN,EAAe,CAACQ,KAAD,EAAQC,QAAR,KAAqB;AACzC,aACE;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAE,MAAMJ,SAAS,CAAC,IAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCR,CAAC,CAACI,GAAF,CAAMO,KAAN,EAAa,MAAb,CAArC,CADF,EAEGJ,MAAM,IACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACP,CAAC,CAACS,OAAF,CAAUE,KAAK,CAACE,UAAhB,CAAD,IACCb,CAAC,CAACU,GAAF,CAAMC,KAAK,CAACE,UAAZ,EAAwB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACzC,eACE;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AACE,UAAA,IAAI,EAAEf,CAAC,CAACI,GAAF,CAAMU,MAAN,EAAc,MAAd,CADR;AAEE,UAAA,EAAE,EAAG,GAAEd,CAAC,CAACI,GAAF,CAAMU,MAAN,EAAc,MAAd,CAAsB,GAAEd,CAAC,CAACI,GAAF,CAAMU,MAAN,EAAc,IAAd,CAAoB,EAFrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGd,CAAC,CAACI,GAAF,CAAMU,MAAN,EAAc,MAAd,CAJH,CADF,CADF;AAUD,OAXD,CAFJ,CAHJ,CADF;AAsBD,KAvBM,CAAP;AAwBD;AACF,CA7BD;;AA+BA,eAAeT,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport config from \"../config\";\nimport Link from \"next/link\";\n\nconst routers = _.get(config, \"routers\");\n\nfunction HomePage() {\n  return (\n    <div>\n      Welcome to Next.js!\n      <h1>Menu</h1>\n      {_renderRouters(routers)}\n    </div>\n  );\n}\n\nconst _renderRouters = routers => {\n  const [isShow, setToggle] = useState(false);\n\n  if (!_.isEmpty(routers)) {\n    return _.map(routers, (group, idxGroup) => {\n      return (\n        <div key={idxGroup}>\n          <h3 onClick={() => setToggle(true)}>{_.get(group, \"text\")}</h3>\n          {isShow && (\n            <ul>\n              {!_.isEmpty(group.subRouters) &&\n                _.map(group.subRouters, (router, index) => {\n                  return (\n                    <li key={index}>\n                      <Link\n                        href={_.get(router, \"href\")}\n                        as={`${_.get(router, \"href\")}${_.get(router, \"id\")}`}\n                      >\n                        {_.get(router, \"text\")}\n                      </Link>\n                    </li>\n                  );\n                })}\n            </ul>\n          )}\n        </div>\n      );\n    });\n  }\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}